<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\AT_H7M7_JTC_1.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\AT_H7M7_JTC_1.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Tue Jun 14 15:42:08 2022
<BR><P>
<H3>Maximum Stack Usage =      22256 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; TG_TrajGen &rArr; TG_SLP_FindTraj &rArr; TG_SLP_q2 &rArr; __hardfp_pow &rArr; sqrt &rArr; __set_errno
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[c2]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">NMI_Handler</a><BR>
 <LI><a href="#[5]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">HardFault_Handler</a><BR>
 <LI><a href="#[6]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">MemManage_Handler</a><BR>
 <LI><a href="#[7]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">BusFault_Handler</a><BR>
 <LI><a href="#[8]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">UsageFault_Handler</a><BR>
 <LI><a href="#[9]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SVC_Handler</a><BR>
 <LI><a href="#[a]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">DebugMon_Handler</a><BR>
 <LI><a href="#[b]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">PendSV_Handler</a><BR>
 <LI><a href="#[87]">ADC3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[87]">ADC3_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[87]">ADC3_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[1f]">ADC_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[89]">BDMA_Channel0_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[8a]">BDMA_Channel1_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[8b]">BDMA_Channel2_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[8c]">BDMA_Channel3_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[8d]">BDMA_Channel4_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[8e]">BDMA_Channel5_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[8f]">BDMA_Channel6_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[90]">BDMA_Channel7_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[7]">BusFault_Handler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[67]">CEC_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[4d]">CM4_SEV_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[4c]">CM7_SEV_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[91]">COMP1_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[98]">CRS_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[a0]">Can_SendFrameChangeFsm</a> from can.o(i.Can_SendFrameChangeFsm) referenced from can.o(i.Can_TxBufferConf)
 <LI><a href="#[a1]">Can_SendFrameChangeMode</a> from can.o(i.Can_SendFrameChangeMode) referenced from can.o(i.Can_TxBufferConf)
 <LI><a href="#[9f]">Can_SendFrameMove</a> from can.o(i.Can_SendFrameMove) referenced from can.o(i.Can_TxBufferConf)
 <LI><a href="#[a2]">Can_SendFrameResetAllDevices</a> from can.o(i.Can_SendFrameResetAllDevices) referenced from can.o(i.Can_TxBufferConf)
 <LI><a href="#[a9]">Can_SendFrameResetGripper</a> from can.o(i.Can_SendFrameResetGripper) referenced from can.o(i.Can_TxBufferConf)
 <LI><a href="#[a3]">Can_SendFrameResetJoint0</a> from can.o(i.Can_SendFrameResetJoint0) referenced from can.o(i.Can_TxBufferConf)
 <LI><a href="#[a4]">Can_SendFrameResetJoint1</a> from can.o(i.Can_SendFrameResetJoint1) referenced from can.o(i.Can_TxBufferConf)
 <LI><a href="#[a5]">Can_SendFrameResetJoint2</a> from can.o(i.Can_SendFrameResetJoint2) referenced from can.o(i.Can_TxBufferConf)
 <LI><a href="#[a6]">Can_SendFrameResetJoint3</a> from can.o(i.Can_SendFrameResetJoint3) referenced from can.o(i.Can_TxBufferConf)
 <LI><a href="#[a7]">Can_SendFrameResetJoint4</a> from can.o(i.Can_SendFrameResetJoint4) referenced from can.o(i.Can_TxBufferConf)
 <LI><a href="#[a8]">Can_SendFrameResetJoint5</a> from can.o(i.Can_SendFrameResetJoint5) referenced from can.o(i.Can_TxBufferConf)
 <LI><a href="#[58]">DCMI_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[77]">DFSDM1_FLT0_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[78]">DFSDM1_FLT1_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[79]">DFSDM1_FLT2_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[7a]">DFSDM1_FLT3_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream0_IRQHandler</a> from mb_rtu_slave.o(i.DMA1_Stream0_IRQHandler) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream1_IRQHandler</a> from mb_rtu_slave.o(i.DMA1_Stream1_IRQHandler) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream2_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream3_IRQHandler</a> from debug.o(i.DMA1_Stream3_IRQHandler) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[1c]">DMA1_Stream4_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[1d]">DMA1_Stream5_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[1e]">DMA1_Stream6_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[3b]">DMA1_Stream7_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[63]">DMA2D_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[44]">DMA2_Stream0_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[45]">DMA2_Stream1_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[46]">DMA2_Stream2_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[47]">DMA2_Stream3_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[48]">DMA2_Stream4_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[4e]">DMA2_Stream5_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[4f]">DMA2_Stream6_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[50]">DMA2_Stream7_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[6f]">DMAMUX1_OVR_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[88]">DMAMUX2_OVR_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[a]">DebugMon_Handler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[99]">ECC_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[49]">ETH_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[4a]">ETH_WKUP_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[13]">EXTI0_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[35]">EXTI15_10_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[14]">EXTI1_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[15]">EXTI2_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[16]">EXTI3_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[17]">EXTI4_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[24]">EXTI9_5_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[20]">FDCAN1_IT0_IRQHandler</a> from can.o(i.FDCAN1_IT0_IRQHandler) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[22]">FDCAN1_IT1_IRQHandler</a> from can.o(i.FDCAN1_IT1_IRQHandler) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[21]">FDCAN2_IT0_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[23]">FDCAN2_IT1_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[4b]">FDCAN_CAL_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[11]">FLASH_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[3c]">FMC_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[5a]">FPU_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[9b]">HOLD_CORE_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[76]">HRTIM1_FLT_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[70]">HRTIM1_Master_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[71]">HRTIM1_TIMA_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[72]">HRTIM1_TIMB_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[73]">HRTIM1_TIMC_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[74]">HRTIM1_TIMD_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[75]">HRTIM1_TIME_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[85]">HSEM1_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[86]">HSEM2_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[2d]">I2C1_ER_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[2c]">I2C1_EV_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[2f]">I2C2_ER_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[2e]">I2C2_EV_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[53]">I2C3_ER_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[52]">I2C3_EV_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[69]">I2C4_ER_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[68]">I2C4_EV_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[82]">JPEG_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[66]">LPTIM1_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[92]">LPTIM2_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[93]">LPTIM3_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[94]">LPTIM4_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[95]">LPTIM5_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[96]">LPUART1_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[62]">LTDC_ER_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[61]">LTDC_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[81]">MDIOS_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[80]">MDIOS_WKUP_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[83]">MDMA_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[6]">MemManage_Handler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[6c]">OTG_FS_EP1_IN_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[6b]">OTG_FS_EP1_OUT_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[6e]">OTG_FS_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[6d]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[55]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[54]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[57]">OTG_HS_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[56]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[e]">PVD_AVD_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[65]">QUADSPI_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[12]">RCC_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[59]">RNG_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[36]">RTC_Alarm_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[10]">RTC_WKUP_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[60]">SAI1_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[64]">SAI2_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[7b]">SAI3_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[9a]">SAI4_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[3d]">SDMMC1_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[84]">SDMMC2_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[6a]">SPDIF_RX_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[30]">SPI1_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[31]">SPI2_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[3f]">SPI3_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[5d]">SPI4_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[5e]">SPI5_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[5f]">SPI6_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[7c]">SWPMI1_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[c]">SysTick_Handler</a> from control.o(i.SysTick_Handler) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[9d]">SystemInit</a> from system_stm32h7xx_dualcore_boot_cm4_cm7.o(i.SystemInit) referenced from startup_stm32h745xx.o(.text)
 <LI><a href="#[f]">TAMP_STAMP_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[7d]">TIM15_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[7e]">TIM16_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[7f]">TIM17_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[25]">TIM1_BRK_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[28]">TIM1_CC_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[27]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[26]">TIM1_UP_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[29]">TIM2_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[2a]">TIM3_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[2b]">TIM4_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[3e]">TIM5_IRQHandler</a> from mb_rtu_slave.o(i.TIM5_IRQHandler) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[42]">TIM6_DAC_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[43]">TIM7_IRQHandler</a> from control.o(i.TIM7_IRQHandler) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[37]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[3a]">TIM8_CC_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[39]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[38]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[40]">UART4_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[41]">UART5_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[5b]">UART7_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[5c]">UART8_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[32]">USART1_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[33]">USART2_IRQHandler</a> from mb_rtu_slave.o(i.USART2_IRQHandler) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[34]">USART3_IRQHandler</a> from debug.o(i.USART3_IRQHandler) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[51]">USART6_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[8]">UsageFault_Handler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[9c]">WAKEUP_PIN_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[d]">WWDG_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[97]">WWDG_RST_IRQHandler</a> from startup_stm32h745xx.o(.text) referenced from startup_stm32h745xx.o(RESET)
 <LI><a href="#[aa]">__main</a> from __main.o(!!!main) referenced from startup_stm32h745xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[10c]"></a>Can_Conf</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, can.o(i.Can_Conf))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Can_Conf &rArr; Can_FiltersConf
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_TxBufferConf
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_StructConf
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_FiltersConf
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_FdcanConf
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SystemConf
</UL>

<P><STRONG><a name="[116]"></a>Can_SendDataToJoints</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, can.o(i.Can_SendDataToJoints))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Can_SendDataToJoints &rArr; Can_CheckStatus &rArr; Can_CheckCanStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_SendFrameToDevices
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_CheckStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcAct
</UL>

<P><STRONG><a name="[105]"></a>ControlJtcJogKinCalc</STRONG> (Thumb, 74 bytes, Stack size 1368 bytes, control.o(i.ControlJtcJogKinCalc))
<BR><BR>[Stack]<UL><LI>Max Depth = 6864<LI>Call Chain = ControlJtcJogKinCalc &rArr; Kin_IKCalcFromRotMat &rArr; Kin_IKRaw &rArr; InvMat4 &rArr; Mat4Ones &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKCalcFromRotMat
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[e0]"></a>Control_ClearExternallErrorsViaCan</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, control.o(i.Control_ClearExternallErrorsViaCan))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ActControlWords (via Veneer)
</UL>

<P><STRONG><a name="[df]"></a>Control_ClearInternallErrorsInJtc</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, control.o(i.Control_ClearInternallErrorsInJtc))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Control_ClearInternallErrorsInJtc &rArr; Control_CheckErrorFlags &rArr; Control_CheckParkBrakeTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_CheckErrorFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ActControlWords (via Veneer)
</UL>

<P><STRONG><a name="[e1]"></a>Control_ResetDevicesViaCan</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, control.o(i.Control_ResetDevicesViaCan))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Control_ResetDevicesViaCan &rArr; Joints_SetResetValuesVariables
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_SetResetValuesVariables (via Veneer)
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gripper_SetResetValuesVariables (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ActControlWords (via Veneer)
</UL>

<P><STRONG><a name="[dc]"></a>Control_SetDefualtArmModel</STRONG> (Thumb, 872 bytes, Stack size 48 bytes, control.o(i.Control_SetDefualtArmModel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Control_SetDefualtArmModel
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SetTable
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SystemConf
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ActControlWords (via Veneer)
</UL>

<P><STRONG><a name="[104]"></a>Control_SystemConf</STRONG> (Thumb, 402 bytes, Stack size 24 bytes, control.o(i.Control_SystemConf))
<BR><BR>[Stack]<UL><LI>Max Depth = 1408<LI>Call Chain = Control_SystemConf &rArr; RNEA_Conf &rArr; HRZ &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_Conf
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_Conf
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Conf (via Veneer)
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Conf
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_SetStartValuesVariables (via Veneer)
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_SetDefaultPidParam (via Veneer)
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_SetDefaultFriction (via Veneer)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Conf (via Veneer)
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gripper_SetStartValuesVariables (via Veneer)
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_Conf (via Veneer)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_TrajClear
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SetDefualtArmModel
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SafetyOutOff
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_RobToolVariableConf
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcVariableConf
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JogVariableConf
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_ClockConf
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_Conf
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[124]"></a>Control_TrajClear</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, control.o(i.Control_TrajClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Control_TrajClear
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_TrajClearPointDouble
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_TrajGen
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SystemConf
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcTeaching
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInit
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcAct
</UL>

<P><STRONG><a name="[20]"></a>FDCAN1_IT0_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, can.o(i.FDCAN1_IT0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FDCAN1_IT0_IRQHandler &rArr; Can_ReadFramesFromBuffer &rArr; Can_ReadFrameMoveResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_SendFrameOccurred
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_ReadFramesFromBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>FDCAN1_IT1_IRQHandler</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, can.o(i.FDCAN1_IT1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[147]"></a>HRX</STRONG> (Thumb, 138 bytes, Stack size 152 bytes, rnea.o(i.HRX))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = HRX &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin (via Veneer)
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKRaw
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_Conf
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_RobToolVariableConf
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSTool
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSBase
</UL>

<P><STRONG><a name="[146]"></a>HRY</STRONG> (Thumb, 138 bytes, Stack size 152 bytes, rnea.o(i.HRY))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = HRY &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin (via Veneer)
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_Conf
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_RobToolVariableConf
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSTool
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSBase
</UL>

<P><STRONG><a name="[144]"></a>HRZ</STRONG> (Thumb, 138 bytes, Stack size 152 bytes, rnea.o(i.HRZ))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = HRZ &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin (via Veneer)
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKRaw
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_Conf
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_CalcTorques
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_RobToolVariableConf
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSTool
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSBase
</UL>

<P><STRONG><a name="[14c]"></a>HT</STRONG> (Thumb, 80 bytes, Stack size 144 bytes, rnea.o(i.HT))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = HT &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKRaw
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_Conf
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_RobToolVariableConf
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSTool
</UL>

<P><STRONG><a name="[152]"></a>InvMat4</STRONG> (Thumb, 690 bytes, Stack size 376 bytes, rnea.o(i.InvMat4))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = InvMat4 &rArr; Mat4Ones &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4Ones
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKRaw
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_RobToolVariableConf
</UL>

<P><STRONG><a name="[159]"></a>Kin_Conf</STRONG> (Thumb, 204 bytes, Stack size 56 bytes, rnea.o(i.Kin_Conf))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Kin_Conf &rArr; Vec6SetValues &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vec6SetValues
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SystemConf
</UL>

<P><STRONG><a name="[15d]"></a>Kin_FKCalc</STRONG> (Thumb, 196 bytes, Stack size 1096 bytes, rnea.o(i.Kin_FKCalc))
<BR><BR>[Stack]<UL><LI>Max Depth = 1528<LI>Call Chain = Kin_FKCalc &rArr; Kin_FKRaw &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FKRaw
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4xMat4
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4ToMat3
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_RotmatToQuat
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_RobPosAct
</UL>

<P><STRONG><a name="[160]"></a>Kin_IKCalcFromQuat</STRONG> (Thumb, 244 bytes, Stack size 1504 bytes, rnea.o(i.Kin_IKCalcFromQuat))
<BR><BR>[Stack]<UL><LI>Max Depth = 5496<LI>Call Chain = Kin_IKCalcFromQuat &rArr; Kin_IKRaw &rArr; InvMat4 &rArr; Mat4Ones &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKRaw
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_CheckNoRealSolutionError
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4xMat4
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat3ToMat4
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_QuatToRotmat
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_GetSeqPointKartesianSpace
</UL>

<P><STRONG><a name="[118]"></a>Kin_IKCalcFromRotMat</STRONG> (Thumb, 188 bytes, Stack size 1504 bytes, rnea.o(i.Kin_IKCalcFromRotMat))
<BR><BR>[Stack]<UL><LI>Max Depth = 5496<LI>Call Chain = Kin_IKCalcFromRotMat &rArr; Kin_IKRaw &rArr; InvMat4 &rArr; Mat4Ones &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKRaw
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_CheckNoRealSolutionError
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4xMat4
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlJtcJogKinCalc
</UL>

<P><STRONG><a name="[161]"></a>Kin_QuatToRotmat</STRONG> (Thumb, 182 bytes, Stack size 144 bytes, rnea.o(i.Kin_QuatToRotmat))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Kin_QuatToRotmat &rArr; Mat3Ones &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat3Ones
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKCalcFromQuat
</UL>

<P><STRONG><a name="[123]"></a>Kin_RobPosAct</STRONG> (Thumb, 90 bytes, Stack size 1368 bytes, rnea.o(i.Kin_RobPosAct))
<BR><BR>[Stack]<UL><LI>Max Depth = 2896<LI>Call Chain = Kin_RobPosAct &rArr; Kin_FKCalc &rArr; Kin_FKRaw &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FKCalc
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcAct
</UL>

<P><STRONG><a name="[15f]"></a>Kin_RotmatToQuat</STRONG> (Thumb, 320 bytes, Stack size 80 bytes, rnea.o(i.Kin_RotmatToQuat))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Kin_RotmatToQuat &rArr; __hardfp_sqrt &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FKCalc
</UL>

<P><STRONG><a name="[165]"></a>Mat3Ones</STRONG> (Thumb, 72 bytes, Stack size 88 bytes, rnea.o(i.Mat3Ones))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Mat3Ones &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_Conf
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_CalcTorques
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_QuatToRotmat
</UL>

<P><STRONG><a name="[14a]"></a>Mat3ToMat4</STRONG> (Thumb, 86 bytes, Stack size 168 bytes, rnea.o(i.Mat3ToMat4))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Mat3ToMat4 &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSBase
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKCalcFromQuat
</UL>

<P><STRONG><a name="[149]"></a>Mat3xMat3</STRONG> (Thumb, 126 bytes, Stack size 120 bytes, rnea.o(i.Mat3xMat3))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Mat3xMat3 &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_CalcTorques
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSBase
</UL>

<P><STRONG><a name="[143]"></a>Mat4Ones</STRONG> (Thumb, 68 bytes, Stack size 144 bytes, rnea.o(i.Mat4Ones))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Mat4Ones &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FKRaw
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_Conf
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvMat4
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_RobToolVariableConf
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSTool
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSBase
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SetDefaultVariables
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_GetSeqPointKartesianSpace
</UL>

<P><STRONG><a name="[148]"></a>Mat4ToMat3</STRONG> (Thumb, 72 bytes, Stack size 112 bytes, rnea.o(i.Mat4ToMat3))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Mat4ToMat3 &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_Conf
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_CalcTorques
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSBase
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FKCalc
</UL>

<P><STRONG><a name="[145]"></a>Mat4xMat4</STRONG> (Thumb, 118 bytes, Stack size 176 bytes, rnea.o(i.Mat4xMat4))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Mat4xMat4 &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKRaw
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_Conf
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_CalcTorques
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKCalcFromRotMat
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_RobToolVariableConf
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSTool
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSBase
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKCalcFromQuat
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FKCalc
</UL>

<P><STRONG><a name="[13b]"></a>RNEA_CalcTorques</STRONG> (Thumb, 5296 bytes, Stack size 2392 bytes, rnea.o(i.RNEA_CalcTorques))
<BR><BR>[Stack]<UL><LI>Max Depth = 2728<LI>Call Chain = RNEA_CalcTorques &rArr; HRZ &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vec3xScalar
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vec3SubVec3
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vec3Cross
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vec3AddVec3
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat3xVec3
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat3Transpose
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4xMat4
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4ToMat3
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat3xMat3
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRZ
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vec3Zeros
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat3Ones
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcTeaching
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcOperate
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInitPosAccurateStage
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInitDeparkStage
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcHoldPos
</UL>

<P><STRONG><a name="[dd]"></a>RNEA_Conf</STRONG> (Thumb, 3762 bytes, Stack size 1048 bytes, rnea.o(i.RNEA_Conf))
<BR><BR>[Stack]<UL><LI>Max Depth = 1384<LI>Call Chain = RNEA_Conf &rArr; HRZ &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vec3SubVec3
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4ToVec3
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat3Transpose
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4xMat4
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4ToMat3
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4Ones
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRZ
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRY
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRX
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat3Ones
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SystemConf
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_UseNewArmModel (via Veneer)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ActControlWords (via Veneer)
</UL>

<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, control.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[125]"></a>TG_ClearTgenVariables</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, trajgen.o(i.TG_ClearTgenVariables))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_TrajGen
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcTeaching
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInit
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcAct
</UL>

<P><STRONG><a name="[158]"></a>TG_Conf</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, trajgen.o(i.TG_Conf))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = TG_Conf &rArr; TG_SetDefaultVariables &rArr; Mat4Ones &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SetDefaultVariables
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SystemConf
</UL>

<P><STRONG><a name="[16e]"></a>TG_SetDefaultVariables</STRONG> (Thumb, 556 bytes, Stack size 184 bytes, trajgen.o(i.TG_SetDefaultVariables))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = TG_SetDefaultVariables &rArr; Mat4Ones &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vec6Zeros
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4Ones
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vec4Zeros
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_Conf
</UL>

<P><STRONG><a name="[106]"></a>TG_TrajGen</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, trajgen.o(i.TG_TrajGen))
<BR><BR>[Stack]<UL><LI>Max Depth = 22256<LI>Call Chain = TG_TrajGen &rArr; TG_SLP_FindTraj &rArr; TG_SLP_q2 &rArr; __hardfp_pow &rArr; sqrt &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_ClearTgenVariables
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_TrajClear
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SLP_FindTraj
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SLP_FindPath
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SLP_FindAllTimeStamps
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_GetSeqFromMbs
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[43]"></a>TIM7_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, control.o(i.TIM7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 2920<LI>Call Chain = TIM7_IRQHandler &rArr; Control_JtcAct &rArr; Kin_RobPosAct &rArr; Kin_FKCalc &rArr; Kin_FKRaw &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcAct
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[16b]"></a>Vec3Zeros</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, rnea.o(i.Vec3Zeros))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Vec3Zeros
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_CalcTorques
</UL>

<P><STRONG><a name="[17a]"></a>Vec4Zeros</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, rnea.o(i.Vec4Zeros))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Vec4Zeros
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SetDefaultVariables
</UL>

<P><STRONG><a name="[11f]"></a>Vec6SetValues</STRONG> (Thumb, 20 bytes, Stack size 56 bytes, rnea.o(i.Vec6SetValues))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Vec6SetValues &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Conf
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_RobToolVariableConf
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JogVariableConf
</UL>

<P><STRONG><a name="[11e]"></a>Vec6Zeros</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, rnea.o(i.Vec6Zeros))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Vec6Zeros &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKRaw
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_RobToolVariableConf
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSTool
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSBase
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JogVariableConf
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SetDefaultVariables
</UL>

<P><STRONG><a name="[aa]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[ab]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[ad]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[17c]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[17d]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[17e]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[17f]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[ae]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[180]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[b4]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[af]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[181]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[182]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[183]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[184]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[185]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[186]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[187]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[188]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[189]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[18a]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[18b]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[18c]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[18d]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[18e]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[18f]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[190]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[191]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[192]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[193]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[194]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[b9]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[195]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[196]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[197]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[198]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[199]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[19a]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[19b]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[19c]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[ac]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[19d]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[b1]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[b3]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[19e]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[b5]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 22256 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; TG_TrajGen &rArr; TG_SLP_FindTraj &rArr; TG_SLP_q2 &rArr; __hardfp_pow &rArr; sqrt &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[19f]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[c3]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[b8]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[1a0]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[ba]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>BDMA_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>BDMA_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>BDMA_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>BDMA_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>BDMA_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>BDMA_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>BDMA_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>BDMA_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>CM4_SEV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CM7_SEV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>COMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[98]"></a>CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>DFSDM1_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>DFSDM1_FLT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>DFSDM1_FLT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>DFSDM1_FLT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>DMAMUX1_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>DMAMUX2_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>ECC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>FDCAN2_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>FDCAN2_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>FDCAN_CAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[9b]"></a>HOLD_CORE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>HRTIM1_FLT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>HRTIM1_Master_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>HRTIM1_TIMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>HRTIM1_TIMB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>HRTIM1_TIMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>HRTIM1_TIMD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>HRTIM1_TIME_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>HSEM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>HSEM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>JPEG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>LPTIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>LPTIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>LPTIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>LTDC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>MDIOS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>MDIOS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>MDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>OTG_FS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>OTG_FS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>PVD_AVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>SAI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>SAI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>SDMMC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>SPDIF_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>SWPMI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[9c]"></a>WAKEUP_PIN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>WWDG_RST_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h745xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[c2]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32h745xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[15b]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_TrajInterpolate (via Veneer)
</UL>

<P><STRONG><a name="[bc]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[1a1]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat3Transpose (via Veneer)
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKRaw (via Veneer)
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FKRaw (via Veneer)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_SetDefaultFrictionTable
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vec6Zeros (via Veneer)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vec6SetValues (via Veneer)
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_Conf (via Veneer)
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_CalcTorques (via Veneer)
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4xMat4 (via Veneer)
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4ToMat3 (via Veneer)
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4Ones (via Veneer)
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat3xMat3 (via Veneer)
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat3ToMat4 (via Veneer)
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_RobPosAct (via Veneer)
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKCalcFromRotMat (via Veneer)
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_Conf (via Veneer)
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvMat4 (via Veneer)
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT (via Veneer)
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRZ (via Veneer)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRY (via Veneer)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRX (via Veneer)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlJtcJogKinCalc (via Veneer)
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_RobToolVariableConf (via Veneer)
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogFindNearestSolution (via Veneer)
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSTool (via Veneer)
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSBase (via Veneer)
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JogVariableConf (via Veneer)
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SetDefaultVariables (via Veneer)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_GetSeqPointKartesianSpace (via Veneer)
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_GetSeqPointConfSpace (via Veneer)
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_GetSeqFromMbs (via Veneer)
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat3Ones (via Veneer)
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_QuatToRotmat (via Veneer)
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKCalcFromQuat (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FKCalc (via Veneer)
</UL>

<P><STRONG><a name="[1a2]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[1a3]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[1a4]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[1a5]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[1a6]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[1a7]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[c0]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[bf]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[1a8]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[1a9]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[1aa]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[c1]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[1ab]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[b2]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[b7]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[bb]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[1ac]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[1ad]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[1ae]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[18]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, mb_rtu_slave.o(i.DMA1_Stream0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Stream0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ReinitDmaReadStream
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mb_rtu_slave.o(i.DMA1_Stream1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, debug.o(i.DMA1_Stream3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[c7]"></a>Debug_Conf</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, debug.o(i.Debug_Conf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Debug_Conf &rArr; Debug_ComUart3Conf
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_ComUart3Conf
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SystemConf (via Veneer)
</UL>

<P><STRONG><a name="[c8]"></a>Debug_PrepareFrame</STRONG> (Thumb, 976 bytes, Stack size 24 bytes, debug.o(i.Debug_PrepareFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Debug_PrepareFrame &rArr; Debug_SendFrame &rArr; Debug_Crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_SendFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcAct (via Veneer)
</UL>

<P><STRONG><a name="[150]"></a>Gripper_SetResetValuesVariables</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gripper.o(i.Gripper_SetResetValuesVariables))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_ResetDevicesViaCan (via Veneer)
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SendCommandResetDevice (via Veneer)
</UL>

<P><STRONG><a name="[157]"></a>Gripper_SetStartValuesVariables</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, gripper.o(i.Gripper_SetStartValuesVariables))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SystemConf (via Veneer)
</UL>

<P><STRONG><a name="[15a]"></a>IO_Conf</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, inputsoutputs.o(i.IO_Conf))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SystemConf (via Veneer)
</UL>

<P><STRONG><a name="[121]"></a>IO_InputsAct</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, inputsoutputs.o(i.IO_InputsAct))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IO_InputsAct
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcAct (via Veneer)
</UL>

<P><STRONG><a name="[130]"></a>IO_OutputsAct</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, inputsoutputs.o(i.IO_OutputsAct))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IO_OutputsAct
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcAct (via Veneer)
</UL>

<P><STRONG><a name="[11c]"></a>IO_ParkBrakeInRead</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, inputsoutputs.o(i.IO_ParkBrakeInRead))
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcCheckStateInit (via Veneer)
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_CheckParkBrakeTimeout (via Veneer)
</UL>

<P><STRONG><a name="[133]"></a>IO_ParkBrakeLock</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, inputsoutputs.o(i.IO_ParkBrakeLock))
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcCheckStateInit (via Veneer)
</UL>

<P><STRONG><a name="[140]"></a>IO_ParkBrakeUnlock</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, inputsoutputs.o(i.IO_ParkBrakeUnlock))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInit (via Veneer)
</UL>

<P><STRONG><a name="[cc]"></a>Joints_CalcFrictionCompensate</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, joints.o(i.Joints_CalcFrictionCompensate))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = Joints_CalcFrictionCompensate &rArr; Joints_CalcFrictionCompensatePolynomial &rArr; __hardfp_pow &rArr; sqrt &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_CalcFrictionCompensateTable
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_CalcFrictionCompensatePolynomial
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcOperate (via Veneer)
</UL>

<P><STRONG><a name="[d0]"></a>Joints_CalcInitRegsTorque</STRONG> (Thumb, 132 bytes, Stack size 12 bytes, joints.o(i.Joints_CalcInitRegsTorque))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Joints_CalcInitRegsTorque
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_StopIrValuesVariables
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInitPosAccurateStage (via Veneer)
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInitDeparkStage (via Veneer)
</UL>

<P><STRONG><a name="[13c]"></a>Joints_CalcPIDs</STRONG> (Thumb, 284 bytes, Stack size 20 bytes, joints.o(i.Joints_CalcPIDs))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Joints_CalcPIDs
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcOperate (via Veneer)
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcHoldPos (via Veneer)
</UL>

<P><STRONG><a name="[d5]"></a>Joints_FindMinMaxVelTempInFrictionTabeIdx</STRONG> (Thumb, 178 bytes, Stack size 12 bytes, joints.o(i.Joints_FindMinMaxVelTempInFrictionTabeIdx))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Joints_FindMinMaxVelTempInFrictionTabeIdx
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_SetDefaultFrictionTable
</UL>

<P><STRONG><a name="[d2]"></a>Joints_SetDefaultFriction</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, joints.o(i.Joints_SetDefaultFriction))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Joints_SetDefaultFriction &rArr; Joints_SetDefaultFrictionPolynomial
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_SetDefaultFrictionTable
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_SetDefaultFrictionPolynomial
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SystemConf (via Veneer)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ActControlWords
</UL>

<P><STRONG><a name="[da]"></a>Joints_SetDefaultPidParam</STRONG> (Thumb, 212 bytes, Stack size 48 bytes, joints.o(i.Joints_SetDefaultPidParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Joints_SetDefaultPidParam
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SystemConf (via Veneer)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ActControlWords
</UL>

<P><STRONG><a name="[126]"></a>Joints_SetDefaultVariables</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, joints.o(i.Joints_SetDefaultVariables))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Joints_SetDefaultVariables
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInit (via Veneer)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcCheckState (via Veneer)
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcAct (via Veneer)
</UL>

<P><STRONG><a name="[14f]"></a>Joints_SetResetValuesVariables</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, joints.o(i.Joints_SetResetValuesVariables))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Joints_SetResetValuesVariables
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_ResetDevicesViaCan (via Veneer)
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SendCommandResetDevice (via Veneer)
</UL>

<P><STRONG><a name="[156]"></a>Joints_SetStartValuesVariables</STRONG> (Thumb, 350 bytes, Stack size 88 bytes, joints.o(i.Joints_SetStartValuesVariables))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Joints_SetStartValuesVariables
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SystemConf (via Veneer)
</UL>

<P><STRONG><a name="[141]"></a>Joints_StartIrValuesVariables</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, joints.o(i.Joints_StartIrValuesVariables))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInitPosAccurateStage (via Veneer)
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInitDeparkStage (via Veneer)
</UL>

<P><STRONG><a name="[d1]"></a>Joints_StopIrValuesVariables</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, joints.o(i.Joints_StopIrValuesVariables))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_CalcInitRegsTorque
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInitPosAccurateStage (via Veneer)
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInitDeparkStage (via Veneer)
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInit (via Veneer)
</UL>

<P><STRONG><a name="[d6]"></a>MBS_Act</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, mb_rtu_slave.o(i.MBS_Act))
<BR><BR>[Stack]<UL><LI>Max Depth = 1456<LI>Call Chain = MBS_Act &rArr; MBS_ActControlWords &rArr; MBS_UseNewArmModel &rArr; RNEA_Conf &rArr; HRZ &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ActTelemetry
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ActControlWords
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ActConfigWords
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcAct (via Veneer)
</UL>

<P><STRONG><a name="[e4]"></a>MBS_Conf</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, mb_rtu_slave.o(i.MBS_Conf))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MBS_Conf &rArr; MBS_StructConf
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_StructConf
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ComUart2Conf
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SystemConf (via Veneer)
</UL>

<P><STRONG><a name="[9d]"></a>SystemInit</STRONG> (Thumb, 216 bytes, Stack size 20 bytes, system_stm32h7xx_dualcore_boot_cm4_cm7.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(.text)
</UL>
<P><STRONG><a name="[3e]"></a>TIM5_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, mb_rtu_slave.o(i.TIM5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TIM5_IRQHandler &rArr; MBS_ReadRequest &rArr; MBS_Response_WnDQ &rArr; MBS_Crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ReadRequest
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>USART2_IRQHandler</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, mb_rtu_slave.o(i.USART2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USART3_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, debug.o(i.USART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USART3_IRQHandler &rArr; Debug_ReadFrame &rArr; Debug_Crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_ReadFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h745xx.o(RESET)
</UL>
<P><STRONG><a name="[f5]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[f0]"></a>__hardfp_acos</STRONG> (Thumb, 422 bytes, Stack size 72 bytes, acos.o(i.__hardfp_acos))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __hardfp_acos &rArr; sqrt &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKRaw (via Veneer)
</UL>

<P><STRONG><a name="[f4]"></a>__hardfp_atan</STRONG> (Thumb, 402 bytes, Stack size 40 bytes, atan.o(i.__hardfp_atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __hardfp_atan &rArr; __ARM_fpclassify
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[f8]"></a>__hardfp_atan2</STRONG> (Thumb, 392 bytes, Stack size 56 bytes, atan2.o(i.__hardfp_atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __ARM_fpclassify
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKRaw (via Veneer)
</UL>

<P><STRONG><a name="[fb]"></a>__hardfp_cos</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, cos.o(i.__hardfp_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKRaw (via Veneer)
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FKRaw (via Veneer)
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRZ (via Veneer)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRY (via Veneer)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRX (via Veneer)
</UL>

<P><STRONG><a name="[cf]"></a>__hardfp_pow</STRONG> (Thumb, 2140 bytes, Stack size 192 bytes, pow.o(i.__hardfp_pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = __hardfp_pow &rArr; sqrt &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_CalcFrictionCompensatePolynomial
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SLP_q2 (via Veneer)
</UL>

<P><STRONG><a name="[102]"></a>__hardfp_sin</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, sin.o(i.__hardfp_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKRaw (via Veneer)
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FKRaw (via Veneer)
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRZ (via Veneer)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRY (via Veneer)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRX (via Veneer)
</UL>

<P><STRONG><a name="[103]"></a>__hardfp_sqrt</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, sqrt.o(i.__hardfp_sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __hardfp_sqrt &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKRaw (via Veneer)
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_RotmatToQuat (via Veneer)
</UL>

<P><STRONG><a name="[fc]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 646 bytes, Stack size 144 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[fe]"></a>__kernel_cos</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __kernel_cos
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[f2]"></a>__kernel_poly</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[fd]"></a>__kernel_sin</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __kernel_sin &rArr; __ARM_fpclassify
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[ff]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[0]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[f9]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[f1]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[100]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[f6]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[fa]"></a>atan</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = atan &rArr; __hardfp_atan &rArr; __ARM_fpclassify
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[f7]"></a>fabs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[b6]"></a>main</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 22256<LI>Call Chain = main &rArr; TG_TrajGen &rArr; TG_SLP_FindTraj &rArr; TG_SLP_q2 &rArr; __hardfp_pow &rArr; sqrt &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_TrajGen (via Veneer)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SystemConf (via Veneer)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlJtcJogKinCalc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[f3]"></a>sqrt</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sqrt &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[107]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>

<P><STRONG><a name="[b0]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[1af]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[1b0]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[108]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[101]"></a>__ARM_scalbn</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn))
<BR><BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[109]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[10b]"></a>Can_CheckCanStatus</STRONG> (Thumb, 410 bytes, Stack size 16 bytes, can.o(i.Can_CheckCanStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Can_CheckCanStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_CheckStatus
</UL>

<P><STRONG><a name="[10a]"></a>Can_CheckStatus</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, can.o(i.Can_CheckStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Can_CheckStatus &rArr; Can_CheckCanStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_CheckCanStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_SendDataToJoints
</UL>

<P><STRONG><a name="[110]"></a>Can_FdcanConf</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, can.o(i.Can_FdcanConf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Can_FdcanConf
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_Conf
</UL>

<P><STRONG><a name="[10e]"></a>Can_FiltersConf</STRONG> (Thumb, 406 bytes, Stack size 28 bytes, can.o(i.Can_FiltersConf))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Can_FiltersConf
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_Conf
</UL>

<P><STRONG><a name="[115]"></a>Can_ReadFrameChangeConfResponse</STRONG> (Thumb, 368 bytes, Stack size 28 bytes, can.o(i.Can_ReadFrameChangeConfResponse))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Can_ReadFrameChangeConfResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_ReadFramesFromBuffer
</UL>

<P><STRONG><a name="[114]"></a>Can_ReadFrameChangeFsmResponse</STRONG> (Thumb, 350 bytes, Stack size 28 bytes, can.o(i.Can_ReadFrameChangeFsmResponse))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Can_ReadFrameChangeFsmResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_ReadFramesFromBuffer
</UL>

<P><STRONG><a name="[113]"></a>Can_ReadFrameMoveResponse</STRONG> (Thumb, 648 bytes, Stack size 32 bytes, can.o(i.Can_ReadFrameMoveResponse))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Can_ReadFrameMoveResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_ReadFramesFromBuffer
</UL>

<P><STRONG><a name="[112]"></a>Can_ReadFramesFromBuffer</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, can.o(i.Can_ReadFramesFromBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Can_ReadFramesFromBuffer &rArr; Can_ReadFrameMoveResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_ReadFrameMoveResponse
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_ReadFrameChangeFsmResponse
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_ReadFrameChangeConfResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN1_IT0_IRQHandler
</UL>

<P><STRONG><a name="[a0]"></a>Can_SendFrameChangeFsm</STRONG> (Thumb, 388 bytes, Stack size 28 bytes, can.o(i.Can_SendFrameChangeFsm))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Can_SendFrameChangeFsm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> can.o(i.Can_TxBufferConf)
</UL>
<P><STRONG><a name="[a1]"></a>Can_SendFrameChangeMode</STRONG> (Thumb, 424 bytes, Stack size 28 bytes, can.o(i.Can_SendFrameChangeMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Can_SendFrameChangeMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> can.o(i.Can_TxBufferConf)
</UL>
<P><STRONG><a name="[9f]"></a>Can_SendFrameMove</STRONG> (Thumb, 452 bytes, Stack size 32 bytes, can.o(i.Can_SendFrameMove))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Can_SendFrameMove
</UL>
<BR>[Address Reference Count : 1]<UL><LI> can.o(i.Can_TxBufferConf)
</UL>
<P><STRONG><a name="[15c]"></a>Can_SendFrameOccurred</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, can.o(i.Can_SendFrameOccurred))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Can_SendFrameOccurred
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN1_IT0_IRQHandler
</UL>

<P><STRONG><a name="[a2]"></a>Can_SendFrameResetAllDevices</STRONG> (Thumb, 328 bytes, Stack size 28 bytes, can.o(i.Can_SendFrameResetAllDevices))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Can_SendFrameResetAllDevices
</UL>
<BR>[Address Reference Count : 1]<UL><LI> can.o(i.Can_TxBufferConf)
</UL>
<P><STRONG><a name="[a9]"></a>Can_SendFrameResetGripper</STRONG> (Thumb, 328 bytes, Stack size 28 bytes, can.o(i.Can_SendFrameResetGripper))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Can_SendFrameResetGripper
</UL>
<BR>[Address Reference Count : 1]<UL><LI> can.o(i.Can_TxBufferConf)
</UL>
<P><STRONG><a name="[a3]"></a>Can_SendFrameResetJoint0</STRONG> (Thumb, 328 bytes, Stack size 28 bytes, can.o(i.Can_SendFrameResetJoint0))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Can_SendFrameResetJoint0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> can.o(i.Can_TxBufferConf)
</UL>
<P><STRONG><a name="[a4]"></a>Can_SendFrameResetJoint1</STRONG> (Thumb, 328 bytes, Stack size 28 bytes, can.o(i.Can_SendFrameResetJoint1))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Can_SendFrameResetJoint1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> can.o(i.Can_TxBufferConf)
</UL>
<P><STRONG><a name="[a5]"></a>Can_SendFrameResetJoint2</STRONG> (Thumb, 328 bytes, Stack size 28 bytes, can.o(i.Can_SendFrameResetJoint2))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Can_SendFrameResetJoint2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> can.o(i.Can_TxBufferConf)
</UL>
<P><STRONG><a name="[a6]"></a>Can_SendFrameResetJoint3</STRONG> (Thumb, 328 bytes, Stack size 28 bytes, can.o(i.Can_SendFrameResetJoint3))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Can_SendFrameResetJoint3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> can.o(i.Can_TxBufferConf)
</UL>
<P><STRONG><a name="[a7]"></a>Can_SendFrameResetJoint4</STRONG> (Thumb, 328 bytes, Stack size 28 bytes, can.o(i.Can_SendFrameResetJoint4))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Can_SendFrameResetJoint4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> can.o(i.Can_TxBufferConf)
</UL>
<P><STRONG><a name="[a8]"></a>Can_SendFrameResetJoint5</STRONG> (Thumb, 328 bytes, Stack size 28 bytes, can.o(i.Can_SendFrameResetJoint5))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Can_SendFrameResetJoint5
</UL>
<BR>[Address Reference Count : 1]<UL><LI> can.o(i.Can_TxBufferConf)
</UL>
<P><STRONG><a name="[117]"></a>Can_SendFrameToDevices</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, can.o(i.Can_SendFrameToDevices))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Can_SendFrameToDevices
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_SendDataToJoints
</UL>

<P><STRONG><a name="[10d]"></a>Can_StructConf</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, can.o(i.Can_StructConf))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Can_StructConf
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_Conf
</UL>

<P><STRONG><a name="[10f]"></a>Can_TxBufferConf</STRONG> (Thumb, 528 bytes, Stack size 20 bytes, can.o(i.Can_TxBufferConf))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Can_TxBufferConf
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_Conf
</UL>

<P><STRONG><a name="[111]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, can.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_FdcanConf
</UL>

<P><STRONG><a name="[119]"></a>Control_CheckErrorFlags</STRONG> (Thumb, 542 bytes, Stack size 24 bytes, control.o(i.Control_CheckErrorFlags))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Control_CheckErrorFlags &rArr; Control_CheckParkBrakeTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SafetyOutOff
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_CheckParkBrakeTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_ClearInternallErrorsInJtc
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcAct
</UL>

<P><STRONG><a name="[12c]"></a>Control_CheckLimits</STRONG> (Thumb, 360 bytes, Stack size 12 bytes, control.o(i.Control_CheckLimits))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Control_CheckLimits
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcAct
</UL>

<P><STRONG><a name="[11a]"></a>Control_CheckParkBrakeTimeout</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, control.o(i.Control_CheckParkBrakeTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Control_CheckParkBrakeTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_ParkBrakeInRead (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_CheckErrorFlags
</UL>

<P><STRONG><a name="[154]"></a>Control_ClockConf</STRONG> (Thumb, 212 bytes, Stack size 36 bytes, control.o(i.Control_ClockConf))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Control_ClockConf
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SystemConf
</UL>

<P><STRONG><a name="[11d]"></a>Control_JogVariableConf</STRONG> (Thumb, 110 bytes, Stack size 64 bytes, control.o(i.Control_JogVariableConf))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Control_JogVariableConf &rArr; Vec6Zeros &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vec6Zeros
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vec6SetValues
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SystemConf
</UL>

<P><STRONG><a name="[120]"></a>Control_JtcAct</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, control.o(i.Control_JtcAct))
<BR><BR>[Stack]<UL><LI>Max Depth = 2912<LI>Call Chain = Control_JtcAct &rArr; Kin_RobPosAct &rArr; Kin_FKCalc &rArr; Kin_FKRaw &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_ClearTgenVariables
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Act (via Veneer)
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_RobPosAct
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_SetDefaultVariables (via Veneer)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_OutputsAct (via Veneer)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_InputsAct (via Veneer)
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_PrepareFrame (via Veneer)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_TrajClear
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SetNewTorqueValues
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SendCommandResetDevice
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SendCommandClearErrorsToJoints
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcTeaching
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcSetJointToReadyToOperate
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcOperate
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInit
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcHoldPos
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcCheckState
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_CheckLimits
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_CheckErrorFlags
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_SendDataToJoints
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
</UL>

<P><STRONG><a name="[122]"></a>Control_JtcCheckState</STRONG> (Thumb, 276 bytes, Stack size 32 bytes, control.o(i.Control_JtcCheckState))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Control_JtcCheckState &rArr; Control_JtcCheckStateInit
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_SetDefaultVariables (via Veneer)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_TrajCheckState
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcCheckStateInit
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcAct
</UL>

<P><STRONG><a name="[131]"></a>Control_JtcCheckStateInit</STRONG> (Thumb, 660 bytes, Stack size 24 bytes, control.o(i.Control_JtcCheckStateInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Control_JtcCheckStateInit
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_ParkBrakeLock (via Veneer)
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_ParkBrakeInRead (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcCheckState
</UL>

<P><STRONG><a name="[12a]"></a>Control_JtcHoldPos</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, control.o(i.Control_JtcHoldPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 2744<LI>Call Chain = Control_JtcHoldPos &rArr; RNEA_CalcTorques &rArr; HRZ &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_CalcTorques
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_CalcPIDs (via Veneer)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_TrajClearPointDouble
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcSetJointToEnable
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcSetGripperToEnable
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcPrepareSetedValuesForHoldPos
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSTool
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSJoints
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSBase
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcAct
</UL>

<P><STRONG><a name="[128]"></a>Control_JtcInit</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, control.o(i.Control_JtcInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 2760<LI>Call Chain = Control_JtcInit &rArr; Control_JtcInitPosAccurateStage &rArr; RNEA_CalcTorques &rArr; HRZ &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_ClearTgenVariables
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_StopIrValuesVariables (via Veneer)
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_SetDefaultVariables (via Veneer)
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_ParkBrakeUnlock (via Veneer)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_TrajClear
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcSetJointToReadyToOperate
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInitPreInitStage
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInitPosAccurateStage
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInitDeparkStage
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcAct
</UL>

<P><STRONG><a name="[13f]"></a>Control_JtcInitDeparkStage</STRONG> (Thumb, 356 bytes, Stack size 16 bytes, control.o(i.Control_JtcInitDeparkStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 2744<LI>Call Chain = Control_JtcInitDeparkStage &rArr; RNEA_CalcTorques &rArr; HRZ &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_CalcTorques
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_StopIrValuesVariables (via Veneer)
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_StartIrValuesVariables (via Veneer)
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_CalcInitRegsTorque (via Veneer)
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcSetJointToReadyToOperate
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcSetJointToEnable
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcPrepareSetedValuesForInit
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInit
</UL>

<P><STRONG><a name="[13d]"></a>Control_JtcInitPosAccurateStage</STRONG> (Thumb, 234 bytes, Stack size 24 bytes, control.o(i.Control_JtcInitPosAccurateStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 2752<LI>Call Chain = Control_JtcInitPosAccurateStage &rArr; RNEA_CalcTorques &rArr; HRZ &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_CalcTorques
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_StopIrValuesVariables (via Veneer)
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_StartIrValuesVariables (via Veneer)
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_CalcInitRegsTorque (via Veneer)
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcSetJointToReadyToOperate
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcSetJointToEnable
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcPrepareSetedValuesForInit
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInit
</UL>

<P><STRONG><a name="[13e]"></a>Control_JtcInitPreInitStage</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, control.o(i.Control_JtcInitPreInitStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Control_JtcInitPreInitStage &rArr; Control_JtcSetJointToReadyToOperate
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcSetJointToReadyToOperate
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInit
</UL>

<P><STRONG><a name="[139]"></a>Control_JtcJogActJRSBase</STRONG> (Thumb, 592 bytes, Stack size 800 bytes, control.o(i.Control_JtcJogActJRSBase))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136<LI>Call Chain = Control_JtcJogActJRSBase &rArr; HRZ &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vec6Zeros
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4xMat4
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4ToMat3
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4Ones
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat3xMat3
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat3ToMat4
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRZ
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRY
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRX
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogFindNearestSolution
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcHoldPos
</UL>

<P><STRONG><a name="[138]"></a>Control_JtcJogActJRSJoints</STRONG> (Thumb, 178 bytes, Stack size 8 bytes, control.o(i.Control_JtcJogActJRSJoints))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Control_JtcJogActJRSJoints
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcHoldPos
</UL>

<P><STRONG><a name="[13a]"></a>Control_JtcJogActJRSTool</STRONG> (Thumb, 522 bytes, Stack size 704 bytes, control.o(i.Control_JtcJogActJRSTool))
<BR><BR>[Stack]<UL><LI>Max Depth = 1040<LI>Call Chain = Control_JtcJogActJRSTool &rArr; HRZ &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vec6Zeros
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4xMat4
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4Ones
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRZ
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRY
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRX
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogFindNearestSolution
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcHoldPos
</UL>

<P><STRONG><a name="[14b]"></a>Control_JtcJogFindNearestSolution</STRONG> (Thumb, 168 bytes, Stack size 88 bytes, control.o(i.Control_JtcJogFindNearestSolution))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Control_JtcJogFindNearestSolution &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSTool
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcJogActJRSBase
</UL>

<P><STRONG><a name="[12b]"></a>Control_JtcOperate</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, control.o(i.Control_JtcOperate))
<BR><BR>[Stack]<UL><LI>Max Depth = 2744<LI>Call Chain = Control_JtcOperate &rArr; RNEA_CalcTorques &rArr; HRZ &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_CalcTorques
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_CalcPIDs (via Veneer)
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_CalcFrictionCompensate (via Veneer)
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_TrajInterpolate
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcSetJointToEnable
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcSetGripperToEnable
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcPrepareSetedValuesForOperate
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcAct
</UL>

<P><STRONG><a name="[137]"></a>Control_JtcPrepareSetedValuesForHoldPos</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, control.o(i.Control_JtcPrepareSetedValuesForHoldPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Control_JtcPrepareSetedValuesForHoldPos
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcHoldPos
</UL>

<P><STRONG><a name="[142]"></a>Control_JtcPrepareSetedValuesForInit</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, control.o(i.Control_JtcPrepareSetedValuesForInit))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInitPosAccurateStage
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInitDeparkStage
</UL>

<P><STRONG><a name="[14e]"></a>Control_JtcPrepareSetedValuesForOperate</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, control.o(i.Control_JtcPrepareSetedValuesForOperate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Control_JtcPrepareSetedValuesForOperate
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcOperate
</UL>

<P><STRONG><a name="[135]"></a>Control_JtcSetGripperToEnable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, control.o(i.Control_JtcSetGripperToEnable))
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcTeaching
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcOperate
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcHoldPos
</UL>

<P><STRONG><a name="[134]"></a>Control_JtcSetJointToEnable</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, control.o(i.Control_JtcSetJointToEnable))
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcTeaching
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcOperate
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInitPosAccurateStage
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInitDeparkStage
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcHoldPos
</UL>

<P><STRONG><a name="[127]"></a>Control_JtcSetJointToReadyToOperate</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, control.o(i.Control_JtcSetJointToReadyToOperate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Control_JtcSetJointToReadyToOperate
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SetNewTorqueValues
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInitPreInitStage
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInitPosAccurateStage
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInitDeparkStage
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcInit
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcAct
</UL>

<P><STRONG><a name="[129]"></a>Control_JtcTeaching</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, control.o(i.Control_JtcTeaching))
<BR><BR>[Stack]<UL><LI>Max Depth = 2744<LI>Call Chain = Control_JtcTeaching &rArr; RNEA_CalcTorques &rArr; HRZ &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_ClearTgenVariables
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_CalcTorques
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_TrajClear
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcSetJointToEnable
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcSetGripperToEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcAct
</UL>

<P><STRONG><a name="[155]"></a>Control_JtcVariableConf</STRONG> (Thumb, 150 bytes, Stack size 12 bytes, control.o(i.Control_JtcVariableConf))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Control_JtcVariableConf
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SystemConf
</UL>

<P><STRONG><a name="[151]"></a>Control_RobToolVariableConf</STRONG> (Thumb, 518 bytes, Stack size 528 bytes, control.o(i.Control_RobToolVariableConf))
<BR><BR>[Stack]<UL><LI>Max Depth = 1056<LI>Call Chain = Control_RobToolVariableConf &rArr; InvMat4 &rArr; Mat4Ones &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vec6Zeros
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vec6SetValues
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4xMat4
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4Ones
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvMat4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRZ
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRY
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRX
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SystemConf
</UL>

<P><STRONG><a name="[11b]"></a>Control_SafetyOutOff</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, control.o(i.Control_SafetyOutOff))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SystemConf
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_CheckErrorFlags
</UL>

<P><STRONG><a name="[12e]"></a>Control_SendCommandClearErrorsToJoints</STRONG> (Thumb, 104 bytes, Stack size 20 bytes, control.o(i.Control_SendCommandClearErrorsToJoints))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Control_SendCommandClearErrorsToJoints
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcAct
</UL>

<P><STRONG><a name="[12f]"></a>Control_SendCommandResetDevice</STRONG> (Thumb, 456 bytes, Stack size 24 bytes, control.o(i.Control_SendCommandResetDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Control_SendCommandResetDevice &rArr; Joints_SetResetValuesVariables
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_SetResetValuesVariables (via Veneer)
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gripper_SetResetValuesVariables (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcAct
</UL>

<P><STRONG><a name="[12d]"></a>Control_SetNewTorqueValues</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, control.o(i.Control_SetNewTorqueValues))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Control_SetNewTorqueValues &rArr; Control_JtcSetJointToReadyToOperate
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcSetJointToReadyToOperate
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcAct
</UL>

<P><STRONG><a name="[153]"></a>Control_SetTable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, control.o(i.Control_SetTable))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SetDefualtArmModel
</UL>

<P><STRONG><a name="[132]"></a>Control_TrajCheckState</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, control.o(i.Control_TrajCheckState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Control_TrajCheckState
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcCheckState
</UL>

<P><STRONG><a name="[136]"></a>Control_TrajClearPointDouble</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, control.o(i.Control_TrajClearPointDouble))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_TrajClear
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcHoldPos
</UL>

<P><STRONG><a name="[14d]"></a>Control_TrajInterpolate</STRONG> (Thumb, 472 bytes, Stack size 104 bytes, control.o(i.Control_TrajInterpolate))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Control_TrajInterpolate
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_JtcOperate
</UL>

<P><STRONG><a name="[ce]"></a>Joints_CalcFrictionCompensatePolynomial</STRONG> (Thumb, 268 bytes, Stack size 96 bytes, joints.o(i.Joints_CalcFrictionCompensatePolynomial))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = Joints_CalcFrictionCompensatePolynomial &rArr; __hardfp_pow &rArr; sqrt &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_CalcFrictionCompensate
</UL>

<P><STRONG><a name="[cd]"></a>Joints_CalcFrictionCompensateTable</STRONG> (Thumb, 442 bytes, Stack size 56 bytes, joints.o(i.Joints_CalcFrictionCompensateTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Joints_CalcFrictionCompensateTable
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_CalcFrictionCompensate
</UL>

<P><STRONG><a name="[d4]"></a>Joints_SetDefaultFrictionPolynomial</STRONG> (Thumb, 448 bytes, Stack size 224 bytes, joints.o(i.Joints_SetDefaultFrictionPolynomial))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Joints_SetDefaultFrictionPolynomial
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_SetDefaultFriction
</UL>

<P><STRONG><a name="[d3]"></a>Joints_SetDefaultFrictionTable</STRONG> (Thumb, 176 bytes, Stack size 48 bytes, joints.o(i.Joints_SetDefaultFrictionTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Joints_SetDefaultFrictionTable &rArr; Joints_FindMinMaxVelTempInFrictionTabeIdx
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_FindMinMaxVelTempInFrictionTabeIdx
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_SetDefaultFriction
</UL>

<P><STRONG><a name="[163]"></a>Kin_CheckNoRealSolutionError</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rnea.o(i.Kin_CheckNoRealSolutionError))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKCalcFromRotMat
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKCalcFromQuat
</UL>

<P><STRONG><a name="[15e]"></a>Kin_FKRaw</STRONG> (Thumb, 1628 bytes, Stack size 248 bytes, rnea.o(i.Kin_FKRaw))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = Kin_FKRaw &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4Ones
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin (via Veneer)
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_FKCalc
</UL>

<P><STRONG><a name="[162]"></a>Kin_IKRaw</STRONG> (Thumb, 2140 bytes, Stack size 3464 bytes, rnea.o(i.Kin_IKRaw))
<BR><BR>[Stack]<UL><LI>Max Depth = 3992<LI>Call Chain = Kin_IKRaw &rArr; InvMat4 &rArr; Mat4Ones &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_SolIsReal
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vec6Zeros
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4xMat4
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvMat4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRZ
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRX
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2 (via Veneer)
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt (via Veneer)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin (via Veneer)
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKCalcFromRotMat
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKCalcFromQuat
</UL>

<P><STRONG><a name="[164]"></a>Kin_SolIsReal</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, rnea.o(i.Kin_SolIsReal))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Kin_SolIsReal
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKRaw
</UL>

<P><STRONG><a name="[166]"></a>Mat3Transpose</STRONG> (Thumb, 76 bytes, Stack size 112 bytes, rnea.o(i.Mat3Transpose))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Mat3Transpose &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_Conf
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_CalcTorques
</UL>

<P><STRONG><a name="[167]"></a>Mat3xVec3</STRONG> (Thumb, 96 bytes, Stack size 88 bytes, rnea.o(i.Mat3xVec3))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Mat3xVec3
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_CalcTorques
</UL>

<P><STRONG><a name="[16d]"></a>Mat4ToVec3</STRONG> (Thumb, 46 bytes, Stack size 48 bytes, rnea.o(i.Mat4ToVec3))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Mat4ToVec3
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_Conf
</UL>

<P><STRONG><a name="[169]"></a>Vec3AddVec3</STRONG> (Thumb, 58 bytes, Stack size 88 bytes, rnea.o(i.Vec3AddVec3))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Vec3AddVec3
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_CalcTorques
</UL>

<P><STRONG><a name="[16a]"></a>Vec3Cross</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, rnea.o(i.Vec3Cross))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Vec3Cross
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_CalcTorques
</UL>

<P><STRONG><a name="[16c]"></a>Vec3SubVec3</STRONG> (Thumb, 58 bytes, Stack size 88 bytes, rnea.o(i.Vec3SubVec3))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Vec3SubVec3
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_Conf
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_CalcTorques
</UL>

<P><STRONG><a name="[168]"></a>Vec3xScalar</STRONG> (Thumb, 50 bytes, Stack size 64 bytes, rnea.o(i.Vec3xScalar))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Vec3xScalar
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_CalcTorques
</UL>

<P><STRONG><a name="[d7]"></a>MBS_ActConfigWords</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, mb_rtu_slave.o(i.MBS_ActConfigWords))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Act
</UL>

<P><STRONG><a name="[d8]"></a>MBS_ActControlWords</STRONG> (Thumb, 756 bytes, Stack size 40 bytes, mb_rtu_slave.o(i.MBS_ActControlWords))
<BR><BR>[Stack]<UL><LI>Max Depth = 1440<LI>Call Chain = MBS_ActControlWords &rArr; MBS_UseNewArmModel &rArr; RNEA_Conf &rArr; HRZ &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_Conf (via Veneer)
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_SetDefaultPidParam
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joints_SetDefaultFriction
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SetDefualtArmModel (via Veneer)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_ResetDevicesViaCan (via Veneer)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_ClearInternallErrorsInJtc (via Veneer)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_ClearExternallErrorsViaCan (via Veneer)
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_UseNewPidParam
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_UseNewArmModel
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Act
</UL>

<P><STRONG><a name="[d9]"></a>MBS_ActTelemetry</STRONG> (Thumb, 1578 bytes, Stack size 20 bytes, mb_rtu_slave.o(i.MBS_ActTelemetry))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MBS_ActTelemetry
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Act
</UL>

<P><STRONG><a name="[ee]"></a>MBS_ClrStr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, mb_rtu_slave.o(i.MBS_ClrStr))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_StructConf
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Response_WnHR
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Response_WnDQ
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Response_W1HR
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Response_RnHR
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Response_RnDQ
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ResponseError_IDR
</UL>

<P><STRONG><a name="[e2]"></a>MBS_ComUart2Conf</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, mb_rtu_slave.o(i.MBS_ComUart2Conf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MBS_ComUart2Conf
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Conf
</UL>

<P><STRONG><a name="[e7]"></a>MBS_Crc16</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, mb_rtu_slave.o(i.MBS_Crc16))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MBS_Crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Response_WnHR
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Response_WnDQ
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Response_W1HR
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Response_RnHR
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Response_RnDQ
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ResponseError_IDR
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ReadRequest
</UL>

<P><STRONG><a name="[e6]"></a>MBS_ReadRequest</STRONG> (Thumb, 364 bytes, Stack size 24 bytes, mb_rtu_slave.o(i.MBS_ReadRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = MBS_ReadRequest &rArr; MBS_Response_WnDQ &rArr; MBS_Crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Response_WnHR
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Response_WnDQ
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Response_W1HR
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Response_RnHR
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Response_RnDQ
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ResponseError_IDR
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ReinitDmaReadStream
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[c4]"></a>MBS_ReinitDmaReadStream</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, mb_rtu_slave.o(i.MBS_ReinitDmaReadStream))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream0_IRQHandler
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ReadRequest
</UL>

<P><STRONG><a name="[ef]"></a>MBS_ReinitDmaWriteStream</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, mb_rtu_slave.o(i.MBS_ReinitDmaWriteStream))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Response_WnHR
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Response_WnDQ
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Response_W1HR
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Response_RnHR
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Response_RnDQ
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ResponseError_IDR
</UL>

<P><STRONG><a name="[ec]"></a>MBS_ResponseError_IDR</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, mb_rtu_slave.o(i.MBS_ResponseError_IDR))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MBS_ResponseError_IDR &rArr; MBS_Crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ReinitDmaWriteStream
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Crc16
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ClrStr
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ReadRequest
</UL>

<P><STRONG><a name="[e8]"></a>MBS_Response_RnDQ</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, mb_rtu_slave.o(i.MBS_Response_RnDQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MBS_Response_RnDQ &rArr; MBS_Crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ReinitDmaWriteStream
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Crc16
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ClrStr
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ReadRequest
</UL>

<P><STRONG><a name="[ea]"></a>MBS_Response_RnHR</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, mb_rtu_slave.o(i.MBS_Response_RnHR))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MBS_Response_RnHR &rArr; MBS_Crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ReinitDmaWriteStream
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Crc16
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ClrStr
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ReadRequest
</UL>

<P><STRONG><a name="[eb]"></a>MBS_Response_W1HR</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, mb_rtu_slave.o(i.MBS_Response_W1HR))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MBS_Response_W1HR &rArr; MBS_Crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ReinitDmaWriteStream
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Crc16
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ClrStr
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ReadRequest
</UL>

<P><STRONG><a name="[e9]"></a>MBS_Response_WnDQ</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, mb_rtu_slave.o(i.MBS_Response_WnDQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MBS_Response_WnDQ &rArr; MBS_Crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ReinitDmaWriteStream
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Crc16
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ClrStr
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ReadRequest
</UL>

<P><STRONG><a name="[ed]"></a>MBS_Response_WnHR</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, mb_rtu_slave.o(i.MBS_Response_WnHR))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MBS_Response_WnHR &rArr; MBS_Crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ReinitDmaWriteStream
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Crc16
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ClrStr
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ReadRequest
</UL>

<P><STRONG><a name="[e5]"></a>MBS_StructConf</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, mb_rtu_slave.o(i.MBS_StructConf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MBS_StructConf
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ClrStr
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Conf
</UL>

<P><STRONG><a name="[de]"></a>MBS_UseNewArmModel</STRONG> (Thumb, 288 bytes, Stack size 16 bytes, mb_rtu_slave.o(i.MBS_UseNewArmModel))
<BR><BR>[Stack]<UL><LI>Max Depth = 1400<LI>Call Chain = MBS_UseNewArmModel &rArr; RNEA_Conf &rArr; HRZ &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNEA_Conf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ActControlWords
</UL>

<P><STRONG><a name="[db]"></a>MBS_UseNewPidParam</STRONG> (Thumb, 266 bytes, Stack size 20 bytes, mb_rtu_slave.o(i.MBS_UseNewPidParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MBS_UseNewPidParam
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ActControlWords
</UL>

<P><STRONG><a name="[e3]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, mb_rtu_slave.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Conf
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_ComUart2Conf
</UL>

<P><STRONG><a name="[16f]"></a>TG_GetSeqFromMbs</STRONG> (Thumb, 640 bytes, Stack size 728 bytes, trajgen.o(i.TG_GetSeqFromMbs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8272<LI>Call Chain = TG_GetSeqFromMbs &rArr; TG_GetSeqPointKartesianSpace &rArr; Kin_IKCalcFromQuat &rArr; Kin_IKRaw &rArr; InvMat4 &rArr; Mat4Ones &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_GetSeqPointKartesianSpace
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_GetSeqPointConfSpace
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_TrajGen
</UL>

<P><STRONG><a name="[170]"></a>TG_GetSeqPointConfSpace</STRONG> (Thumb, 138 bytes, Stack size 704 bytes, trajgen.o(i.TG_GetSeqPointConfSpace))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = TG_GetSeqPointConfSpace &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_GetSeqFromMbs
</UL>

<P><STRONG><a name="[171]"></a>TG_GetSeqPointKartesianSpace</STRONG> (Thumb, 554 bytes, Stack size 2048 bytes, trajgen.o(i.TG_GetSeqPointKartesianSpace))
<BR><BR>[Stack]<UL><LI>Max Depth = 7544<LI>Call Chain = TG_GetSeqPointKartesianSpace &rArr; Kin_IKCalcFromQuat &rArr; Kin_IKRaw &rArr; InvMat4 &rArr; Mat4Ones &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mat4Ones
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kin_IKCalcFromQuat
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_GetSeqFromMbs
</UL>

<P><STRONG><a name="[172]"></a>TG_SLP_FindAllTimeStamps</STRONG> (Thumb, 800 bytes, Stack size 448 bytes, trajgen.o(i.TG_SLP_FindAllTimeStamps))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = TG_SLP_FindAllTimeStamps &rArr; TG_SLP_FindOneTimeStamps &rArr; TG_SLP_FindTrace
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SLP_FindOneTimeStamps
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_TrajGen
</UL>

<P><STRONG><a name="[173]"></a>TG_SLP_FindOneTimeStamps</STRONG> (Thumb, 220 bytes, Stack size 72 bytes, trajgen.o(i.TG_SLP_FindOneTimeStamps))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = TG_SLP_FindOneTimeStamps &rArr; TG_SLP_FindTrace
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SLP_GetPt12
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SLP_FindTrace
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SLP_FindAllTimeStamps
</UL>

<P><STRONG><a name="[17b]"></a>TG_SLP_FindPath</STRONG> (Thumb, 374 bytes, Stack size 424 bytes, trajgen.o(i.TG_SLP_FindPath))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = TG_SLP_FindPath
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_TrajGen
</UL>

<P><STRONG><a name="[174]"></a>TG_SLP_FindTrace</STRONG> (Thumb, 370 bytes, Stack size 28 bytes, trajgen.o(i.TG_SLP_FindTrace))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TG_SLP_FindTrace
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SLP_FindOneTimeStamps
</UL>

<P><STRONG><a name="[176]"></a>TG_SLP_FindTraj</STRONG> (Thumb, 1656 bytes, Stack size 21864 bytes, trajgen.o(i.TG_SLP_FindTraj))
<BR><BR>[Stack]<UL><LI>Max Depth = 22232<LI>Call Chain = TG_SLP_FindTraj &rArr; TG_SLP_q2 &rArr; __hardfp_pow &rArr; sqrt &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SLP_q3
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SLP_q2
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SLP_dq2
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SLP_GetPt12
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_TrajGen
</UL>

<P><STRONG><a name="[175]"></a>TG_SLP_GetPt12</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, trajgen.o(i.TG_SLP_GetPt12))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TG_SLP_GetPt12
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SLP_FindTraj
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SLP_FindOneTimeStamps
</UL>

<P><STRONG><a name="[178]"></a>TG_SLP_dq2</STRONG> (Thumb, 90 bytes, Stack size 56 bytes, trajgen.o(i.TG_SLP_dq2))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TG_SLP_dq2
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SLP_FindTraj
</UL>

<P><STRONG><a name="[177]"></a>TG_SLP_q2</STRONG> (Thumb, 330 bytes, Stack size 144 bytes, trajgen.o(i.TG_SLP_q2))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = TG_SLP_q2 &rArr; __hardfp_pow &rArr; sqrt &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SLP_FindTraj
</UL>

<P><STRONG><a name="[179]"></a>TG_SLP_q3</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, trajgen.o(i.TG_SLP_q3))
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TG_SLP_FindTraj
</UL>

<P><STRONG><a name="[c5]"></a>Debug_ComUart3Conf</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, debug.o(i.Debug_ComUart3Conf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Debug_ComUart3Conf
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_Conf
</UL>

<P><STRONG><a name="[cb]"></a>Debug_Crc16</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, debug.o(i.Debug_Crc16))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Debug_Crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_SendFrame
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_ReadFrame
</UL>

<P><STRONG><a name="[ca]"></a>Debug_ReadFrame</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, debug.o(i.Debug_ReadFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Debug_ReadFrame &rArr; Debug_Crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_Crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[c9]"></a>Debug_SendFrame</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, debug.o(i.Debug_SendFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Debug_SendFrame &rArr; Debug_Crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_Crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_PrepareFrame
</UL>

<P><STRONG><a name="[c6]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, debug.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_ComUart3Conf
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
